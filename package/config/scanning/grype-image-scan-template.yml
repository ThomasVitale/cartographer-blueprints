#@ load("@ytt:data", "data")

#@ if/end "grype-image-scan-template" not in data.values.excluded_blueprints:
---
apiVersion: carto.run/v1alpha1
kind: ClusterImageTemplate
metadata:
  name: grype-image-scan-template
spec:
  imagePath: .status.outputs.latestImage

  healthRule:
    singleConditionType: Ready
  
  ytt: |
    #@ load("@ytt:data", "data")

    #@ def merge_labels(fixed_values):
    #@   labels = {}
    #@   if hasattr(data.values.deliverable.metadata, "labels"):
    #@     labels.update(data.values.deliverable.metadata.labels)
    #@   end
    #@   labels.update(fixed_values)
    #@   return labels
    #@ end
    
    ---
    apiVersion: carto.run/v1alpha1
    kind: Runnable
    metadata:
      name: #@ data.values.workload.metadata.name + "-image-scan"
      labels: #@ merge_labels({ "app.kubernetes.io/component": "scan" })
    spec:
      #@ if/end hasattr(data.values.workload.spec, "serviceAccountName"):
      serviceAccountName: #@ data.values.workload.spec.serviceAccountName

      runTemplateRef:
        name: grype-image-scan-taskrun
        kind: ClusterRunTemplate

      inputs:
        image: #@ data.values.image
