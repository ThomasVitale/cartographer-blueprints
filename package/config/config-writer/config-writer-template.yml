#@ load("@ytt:data", "data")
#@ load("/helpers.star", "git_repository", "image_bundle", "is_gitops", "merge_labels", "param")

#@ if/end "config-writer-template" not in data.values.excluded_blueprints:
---
apiVersion: carto.run/v1alpha1
kind: ClusterTemplate
metadata:
  name: config-writer-template
spec:
  params:
    - name: serviceAccount
      default: default
    - name: registry
      default: {}

  healthRule:
    singleConditionType: Ready

  ytt: |
    #@ load("@ytt:data", "data")
    #@ load("@ytt:json", "json")
    #@ load("@ytt:base64", "base64")

    #@ def ca_cert_data():
    #@   if "ca_cert_data" not in param("registry"):
    #@     return ""
    #@   end
    #@
    #@   return param("registry")["ca_cert_data"]
    #@ end

    ---
    apiVersion: carto.run/v1alpha1
    kind: Runnable
    metadata:
      name: #@ data.values.workload.metadata.name + "-config-writer"
      labels: #@ merge_labels({ "app.kubernetes.io/component": "config-writer" })
    spec:
      #@ if/end hasattr(data.values.workload.spec, "serviceAccountName"):
      serviceAccountName: #@ data.values.workload.spec.serviceAccountName

      runTemplateRef:
        name: tekton-taskrun-template

      inputs:
        serviceAccount: #@ data.values.params.serviceAccount
        taskRef:
          kind: ClusterTask
          name: #@ "git-writer" if is_gitops() else "image-writer"
        params:
          #@ if is_gitops():
          - name: git_repository
            value: #@ git_repository()
          - name: git_branch
            value: #@ param("gitops_branch")
          - name: git_user_name
            value: #@ param("gitops_user_name")
          - name: git_user_email
            value: #@ param("gitops_user_email")
          - name: git_commit_message
            value: #@ param("gitops_commit_message")
          - name: git_files
            value: #@ base64.encode(json.encode(data.values.config))
          - name: sub_path
            value: #@ "config/" + data.values.workload.metadata.namespace + "/" + data.values.workload.metadata.name
          #@ else:
          - name: files
            value: #@ base64.encode(json.encode(data.values.config))
          - name: bundle
            value: #@ image_bundle()
          - name: ca_cert_data
            value: #@ ca_cert_data()
          #@ end
