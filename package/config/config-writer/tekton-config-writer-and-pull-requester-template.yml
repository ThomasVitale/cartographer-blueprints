#@ load("@ytt:data", "data")

#@ if/end "tekton-config-writer-and-pull-requester-template" not in data.values.excluded_blueprints:
---
apiVersion: carto.run/v1alpha1
kind: ClusterTemplate
metadata:
  name: tekton-config-writer-and-pull-requester-template
  annotations:
    doc: |
      This templates consumes an application deployment configuration and executes the configured Tekton
      task on every detected input change to push the configuration to a new branch and open a
      pull request to be merged manually.
spec:

  lifecycle: tekton

  ytt: |
    #@ load("@ytt:data", "data")
    #@ load("@ytt:json", "json")
    #@ load("@ytt:base64", "base64")

    #@ def param(key):
    #@   if not key in data.values.params:
    #@     return None
    #@   end
    #@   return data.values.params[key]
    #@ end

    #@ def merge_labels(fixed_values):
    #@   labels = {}
    #@   if hasattr(data.values.workload.metadata, "labels"):
    #@     labels.update(data.values.workload.metadata.labels)
    #@   end
    #@   labels.update(fixed_values)
    #@   return labels
    #@ end

    ---
    apiVersion: tekton.dev/v1beta1
    kind: TaskRun
    metadata:
      generateName: #@ data.values.workload.metadata.name + "-config-writer-pull-requester-"
      labels: #@ merge_labels({ "app.kubernetes.io/component": "config-writer-pull-requester" })
    spec:
      #@ if/end hasattr(data.values.workload.spec, "serviceAccountName"):
      serviceAccountName: #@ data.values.workload.spec.serviceAccountName

      taskRef:
        kind: ClusterTask
        name: commit-and-pr-taskrun

      workspaces:
        - name: ws
          emptyDir: {}

      params:
        - name: git_server_address
          value: #@ data.values.params.gitops_server_address
        - name: repository_owner
          value: #@ data.values.params.gitops_repository_owner
        - name: repository_name
          value: #@ data.values.params.gitops_repository_name
        - name: base_branch
          value: #@ param("gitops_branch")
        - name: git_user_name
          value: #@ param("gitops_user_name")
        - name: git_user_email
          value: #@ param("gitops_user_email")
        - name: git_commit_message
          value: #@ param("gitops_commit_message")
        - name: git_files
          value: #@ base64.encode(json.encode(data.values.config))
        - name: sub_path
          value: #@ "config/" + data.values.workload.metadata.namespace + "/" + data.values.workload.metadata.name
        - name: git_server_kind
          value: #@ data.values.params.gitops_server_kind
        - name: commit_branch
          value: #@ data.values.params.gitops_commit_branch
        - name: pull_request_title
          value: #@ data.values.params.gitops_pull_request_title
        - name: pull_request_body
          value: #@ data.values.params.gitops_pull_request_body
