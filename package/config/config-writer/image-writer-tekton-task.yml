#@ load("@ytt:data", "data")

#@ if/end "image-writer-tekton-task" not in data.values.excluded_blueprints:
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: image-writer
spec:
  description: |-
    Consumes application deployment configuration files as a Base64-encoded JSON and
    pushes them to an OCI registry as an image bundle (imgpkg format).
  params:
    - name: bundle
      description: The fully qualified name of the OCI repository where to push the configuration files.
      type: string
    - name: files
      description: The configuration files to push to the OCI registry, provided as a Base64-encoded JSON map.
      type: string
    - name: ca_cert_data
      description: PEM-encoded certificate data for the OCI Registry where to push the configuration files.
      type: string
      default: ""
  steps:
    - name: main
      image: paketobuildpacks/build-jammy-base:0.1.46
      workingDir: /tekton/home
      script: |
        #!/usr/bin/env bash

        set -o errexit
        set -o pipefail
        set -o xtrace

        # Install imgpkg
        mkdir local-bin/
        curl -L https://carvel.dev/install.sh | K14SIO_INSTALL_BIN_DIR=local-bin bash
        export PATH=$PWD/local-bin/:$PATH

        cd `mktemp -d`

        echo -e "$(params.files)" | base64 --decode > files.json
        eval "$(cat files.json | jq -r 'to_entries | .[] | @sh "mkdir -p $(dirname \(.key)) && echo \(.value) > \(.key)"')"

        mkdir -p .imgpkg
        echo "---
        apiVersion: imgpkg.carvel.dev/v1alpha1
        kind: ImagesLock" > ./.imgpkg/images.yml

        imgpkg_params=""
        if [[ ! -z "$(params.ca_cert_data)" ]]; then
          certs_dir=$(mktemp -d)
          echo "$(params.ca_cert_data)" > $certs_dir/cert
          imgpkg_params="--registry-ca-cert-path=$certs_dir/cert"
        fi
        
        imgpkg push $imgpkg_params -b $(params.bundle) -f .
