#@ load("@ytt:data", "data")

#@ if/end "image-writer-tekton-task" not in data.values.excluded_blueprints:
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: image-writer
spec:
  description: |-
    A task that writes a given set of files (provided as a base64-encoded JSON)
    to the specified OCI registry as an image, making use of the imgpkg bundle format.
  params:
    - name: bundle
      description: Name of the registry + repository to push the bundle to
      type: string
    - name: files
      type: string
      description: >
        Base64-encoded JSON map of files to write to the OCI registry, for example -
        eyAiUkVBRE1FLm1kIjogIiMgUmVhZG1lIiB9
    - name: ca_cert_data
      type: string
      default: ""
      description: >
        PEM-encoded certificate data for the OCI registry where the files
        will be pushed to.
  steps:
    - name: main
      image: paketobuildpacks/build:base
      securityContext:
        runAsUser: 0
      script: |
        #!/usr/bin/env bash

        set -o errexit
        set -o pipefail
        set -o xtrace

        # Install imgpkg
        mkdir local-bin/
        curl -L https://carvel.dev/install.sh | K14SIO_INSTALL_BIN_DIR=local-bin bash
        export PATH=$PWD/local-bin/:$PATH

        cd `mktemp -d`

        echo -e "$(params.files)" | base64 --decode > files.json
        eval "$(cat files.json | jq -r 'to_entries | .[] | @sh "mkdir -p $(dirname \(.key)) && echo \(.value) > \(.key)"')"

        mkdir -p .imgpkg
        echo "---
        apiVersion: imgpkg.carvel.dev/v1alpha1
        kind: ImagesLock" > ./.imgpkg/images.yml

        imgpkg_params=""
        if [[ ! -z "$(params.ca_cert_data)" ]]; then
          certs_dir=$(mktemp -d)
          echo "$(params.ca_cert_data)" > $certs_dir/cert
          imgpkg_params="--registry-ca-cert-path=$certs_dir/cert"
        fi
        
        imgpkg push $imgpkg_params -b $(params.bundle) -f .
